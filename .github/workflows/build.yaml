name: Build and Package

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version
        run: echo "VERSION=v1.0.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t jagadish9084/customer-churn-prediction-api:${VERSION} .
          docker tag jagadish9084/customer-churn-prediction-api:${VERSION} jagadish9084/customer-churn-prediction-api:latest

      - name: Push Docker image
        run: |
          docker push jagadish9084/customer-churn-prediction-api:${VERSION}
          docker push jagadish9084/customer-churn-prediction-api:latest

      - name: Replace image tag placeholder
        run: |
          sed -i "s|__IMAGE_TAG__|${VERSION}|g" k8s/deployment.yaml

      - name: Zip Kubernetes manifests
        run: |
          cd k8s
          zip -r ../k8s-manifests-${VERSION}.zip .

      - name: Upload Kubernetes manifests artifact
        uses: actions/upload-artifact@v4
        with:
          name: k8s-manifests-${{ env.VERSION }}
          path: k8s-manifests-${{ env.VERSION }}.zip
          retention-days: 30

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts   

      - name: Deploy over SSH
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "âœ… Connected to EC2"

            echo "ðŸš€ Deployed!"
          EOF          
